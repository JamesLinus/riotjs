This is a JavaScript implementation of "Riot":http://github.com/thumblemonks/riot/.

It will run in a browser or in Rhino.

h3. Example

Tests look like this:

<pre>
Riot.run(function() {
  context('basic riot functionality', function() {
    given('some simple equality tests', function() {
      asserts('a simple truth test should return true', true).isTrue();
      asserts('isNull is null', null).isNull();
    });

    given('another context', function() {
      asserts('equals should compare strings as expected', 'test string').equals('test string');
    });

    given('a context concerned with functions', function() {
      asserts('asserts() should allow functions to be compared', function() {
        return 'test string';
      }).equals('test string');
    });
  });

  given('yet another context', function() {
    asserts('equals should compare strings as expected', 'test string').equals('test string');
  });
});
</pre>

There are a few aliases to make tests (and output) read more naturally:

* <code>context</code>: <code>given</code> -- Given will add "Given..." to the title in the test output
* <code>asserts</code>: <code>should</code>

h3. Assertions

* <code>equals</code> - for example, <code>asserts('description').equals('value')</code>
* <code>matches</code> - matches a regex
* <code>typeOf</code> - aliased to isTypeOf, kindOf
* <code>isNull</code>
* <code>isTrue</code>
* <code>raises</code>

h3. Riot.run

<code>Riot.run(function() { // your tests });</code> just adds your tests to <code>window.onload</code>.  If there's already an <code>onload</code> handler it'll prepend it.  If there's no <code>window</code> it will just run the tests.

It can also be called with no parameters to run tests defined with <code>Riot.context</code>.  This can be used to create a set of files with tests inside a <code>Riot.context</code> for each file

h3. Packaging

Packaged as a RubyGem usable via "XPCOMCore-RubyGems":http://github.com/conflagrationjs/xpcomcore-rubygem -- "riotjs-xpcc":http://github.com/conflagrationjs/riotjs-xpcc.

